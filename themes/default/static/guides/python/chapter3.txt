# Variables

A **variable** is simply a name you use to refer to a value.

If I say a is 0, a refers to the value 0.  This means when we type a = something into our program and run it, we are asking our computer to store a entry by a name that points to the value 0. There is much more going on in the lower levels of the computer, but it's an okay idea to start by thinking of the scope as a lookup table where a name points to a value.

an example: 

a = 5 # a is the variable, 5 is the value
b = None # b is the variable, None is the value
 
A value is either an atomic object like a number or a complex of values like a list of numbers.

True
'Srini', 'Wendy', 'Dean', 'Hoffman'

There are rules for usage with variables and values, and they are contained in an idea called 'scope'. Scope is the set of rules for precidence in name conflicts.

There can't be two a's within the same function. But functions can be nested. The function has an environment where names are the references to data, so they must be unique.

The scope is a decided-upon set of rules that determine the values of the names in a particular function in your program.

def myFunction(): 
  
